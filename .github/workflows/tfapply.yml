name: Terraform Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      aws-env-dir:
        required: true
        type: string
      aws-region:
        required: true
        type: string

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    # # Map a step output to a job output
    # outputs:
    #   iam-role-arn-out: ${{ vars.IAM_ROLE_ARN_DEV }}
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.IAM_ROLE_ARN_DEV }} # ensure this var is added under `development` env in github
          aws-region: ${{ inputs.aws-region }}
          role-session-name: gh-actions-session
          role-duration-seconds: 3600
          audience: sts.amazonaws.com

      - name: Check Current IAM Role
        run: aws sts get-caller-identity

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.2
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
     
      - name: Terraform Version
        run: terraform -version
        
      - name: Terraform Init
        run: |
          cd ${{ inputs.aws-env-dir }}/
          rm -rf .terraform*
          terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: |
          cd ${{ inputs.aws-env-dir }}/
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd ${{ inputs.aws-env-dir }}/
          terraform plan -out=tfplan
      
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: ${{ inputs.aws-env-dir }}/tfplan

  terraform-apply:
    name: Terraform Apply
    # if: github.event.pull_request.base.ref == 'main' && github.event.pull_request.merged == true
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.IAM_ROLE_ARN_DEV }} # ensure this var is added under `development` env in github
          # role-to-assume: ${{ needs.terraform-plan.outputs.iam-role-arn-out }}
          aws-region: ${{ inputs.aws-region }}
          role-session-name: gh-actions-session
          role-duration-seconds: 3600
          audience: sts.amazonaws.com

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.2

      - name: Terraform Init
        run: |
          cd ${{ inputs.aws-env-dir }}/
          rm -rf .terraform*
          terraform init

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan
      
      - name: Terraform Apply
        run: |
          cd ${{ inputs.aws-env-dir }}/
          terraform state list
          terraform apply ../tfplan
          terraform state list
