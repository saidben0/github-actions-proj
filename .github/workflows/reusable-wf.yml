name: Terraform Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      aws-env-dir:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      iam-role-arn:
        required: true
        type: string

jobs:
  TF-Deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.2
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
     
      - name: Terraform Version
        run: terraform -version
        
      - name: Terraform Init
        run: |
          cd ${{ inputs.aws-env-dir }}/
          rm -rf .terraform*
          terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: |
          cd ${{ inputs.aws-env-dir }}/
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd ${{ inputs.aws-env-dir }}/
          terraform plan -out=tfplan

      - name: Terraform Apply (Run only on merged PR to main)
        if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
        # if: github.event_name == 'pull_request' && github.base_ref == 'main'
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd ${{ inputs.aws-env-dir }}/
          terraform apply -auto-approve tfplan
        # env:
        #   TF_VAR_secret_key: ${{ secrets.TF_VAR_SECRET_KEY }}  # Example of passing a secret variable

      - name: Clean up
        run: terraform workspace select default || terraform workspace new default
